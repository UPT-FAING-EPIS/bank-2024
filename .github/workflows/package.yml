name: Bank Upload Package

on:
  push:
    tags:
    - "v[0-9]+.[0-9]+.[0-9]+"
jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    #- name: Verify commit exists in origin/main
    #  run: |
    #    git fetch --no-tags --prune --depth=1 origin +refs/heads/*:refs/remotes/origin/*
    #    git branch --remote --contains | grep origin/main
    - name: Set VERSION variable from tag
      id: set-version
      run: echo "VERSION=${GITHUB_REF/refs\/tags\/v/}" >> $GITHUB_ENV
    - name: Build
      run: dotnet build -c Release
    - name: Pack
      run: dotnet pack -c Release /p:Version=${VERSION} --no-build --output .
    - name: Push
      run: dotnet nuget push Bank.WebApi.${VERSION}.nupkg --source https://nuget.pkg.github.com/p-cuadros/index.json --api-key "${{ secrets.PACKAGE_AUTH_TOKEN }}"
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
    - name: filename
      run: |
        echo "Bank.WebApi.${{ steps.set-version.outputs.VERSION }}.nupkg"
        echo "${VERSION}"
        echo "Bank.WebApi.${VERSION}.nupkg"
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./Bank.WebApi."${{ steps.set-version.outputs.VERSION }}".nupkg
        asset_name: Bank.WebApi.${VERSION}.nupkg
        asset_content_type: application/nupkg
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
